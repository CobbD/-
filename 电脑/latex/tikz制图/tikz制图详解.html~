<!DOCTYPE html>
<html>
<head>
<!-- 2016-06-23 四 13:36 -->
<meta  charset="utf-8">
<meta  name="viewport" content="width=device-width, initial-scale=1">
<title>tikz制图详解</title>
<meta  name="generator" content="Org-mode">
<meta  name="author" content="万泽(德山书生)">
<meta  name="description" content="制作者邮箱：a358003542@gmail.com"
>
<style type="text/css">
body {
    margin-right: auto;
    margin-left: auto;
}

.title {
    display: block;
    text-align: center;
    padding: 10px;
}

.center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.underline{
    text-decoration: underline;
}
   html, body {
    margin: 0;
    padding: 0;
    font-family:"Microsoft YaHei",Arial,Helvetica,sans-serif,"宋体";
    font-size: 1em;
}

#content {
    display: block;
    margin-left: auto;
    margin-right: auto;
    background:#fcfcfc;
    height:100%;
    margin-left:300px;
    max-width:800px;
    min-height:100%;
    padding:1.618em 3.236em;
}

code {
    padding: 2px 4px;
    color: #c7254e;
    background-color: #f9f2f4;
    border-radius: 4px;
}

pre {
    max-width: 100%;
    display: block;
    padding: 9.5px;
    margin: 0 0 10px;
    font-size: 13px;
    line-height: 1.42857143;
    color: #333;
    background-color: #f5f5f5;
    border: 1px solid #ccc;
    border-radius: 4px;
    overflow : auto;
}


blockquote {
    padding: 10px 20px;
    margin: 0 0 20px;
    font-size: 17.5px;
    border-left: 5px solid #eee;
}

li{
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}

p{
    text-indent:2em;
    line-height:150%;
}

/* dl */
dl {
    margin-top: 0;
    margin-bottom: 20px;
}
dt {
    font-weight: 700;
    line-height: 150%;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}
dd {
    line-height: 150%;
}

@media (min-width: 768px) {
  dt {
    white-space: nowrap;
  }
}

video{
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
}

figure p{
    text-indent:0em;
}
img{
    max-width: 100%;
}

embed{
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
}

figure{
    text-align: center;
}

/*  class  */
.FRAMED{
    max-width:100%;
    border:1px solid ;
    padding: 1em;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.NOTECARD{
    width: 35%;
    position:relative;
    right: -30%;
    padding: 1em;
    margin:0 auto;
    border: solid 1px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

/*
table
*/
table {
    border-collapse: collapse;
    border-spacing: 0;
    margin: 16px 0;
    empty-cells: show;
    border: 1px solid #ccc;
    width: 100%;
    display: table;
}

table tr {
    border-bottom: 1px solid #ddd;
}
table th,table td{
    padding:8px;
}

table tr:nth-child(even) {
    background-color: #f1f1f1;
}








ul,ol,dl{
    line-height:24px;
    list-style-image:none;
    /* list-style:none; */
    margin:0px 0px 24px 0px;
    padding:0;
}

li{
    margin-left: 24px;
}

dd{
    margin:0;
}

#content .section ul,#content .toctree-wrapper ul,article ul{
    list-style:disc;
    line-height:24px;
    margin-bottom:24px}

#content .section ul li,#content .toctree-wrapper ul li,article ul li{
    list-style:disc;
    margin-left:24px}

#content .section ul li p:last-child,#content .toctree-wrapper ul li p:last-child,article ul li p:last-child{
                                                                                                                                  margin-bottom:0}

#content .section ul li ul,#content .toctree-wrapper ul li ul,article ul li ul{
    margin-bottom:0}

#content .section ul li li,#content .toctree-wrapper ul li li,article ul li li{
    list-style:circle}

#content .section ul li li li,#content .toctree-wrapper ul li li li,article ul li li li{
    list-style:square}

#content .section ul li ol li,#content .toctree-wrapper ul li ol li,article ul li ol li{
    list-style:decimal}

#content .section ol,#content ol,article ol{
    list-style:decimal;
    line-height:24px;
    margin-bottom:24px}

#content .section ol li,#content ol li,article ol li{
    list-style:decimal;
    margin-left:24px}

#content .section ol li p:last-child,#content ol li p:last-child,article ol li p:last-child{
                                                                                                                           margin-bottom:0}

#content .section ol li ul,#content ol li ul,article ol li ul{
    margin-bottom:0}

#content .section ol li ul li,#content ol li ul li,article ol li ul li{
    list-style:disc}

dl dt{
    font-weight:bold;
}

dl p,dl table,dl ul,dl ol{
    margin-bottom:12px !important;
}

dl dd{
    margin:0 0 12px 24px;
}

@media print{
    .codeblock,pre.src{
        white-space:pre.src-wrap}
}

@media print{
    html,body,section{
        background:none !important}

    *{
        box-shadow:none !important;
        text-shadow:none !important;
        filter:none !important;
        -ms-filter:none !important}

    a,a:visited{
          text-decoration:underline}

    pre.src,blockquote{
        page-break-inside:avoid}

    thead{
        display:table-header-group}

    tr,img{
        page-break-inside:avoid}

    img{
        max-width:100% !important}

    @page{
        margin:0.5cm}

    p,h2,h3{
        orphans:3;
        widows:3}

    h2,h3{
        page-break-after:avoid}
}

@media print{
    #postamble{
        display:none}

    #content{
        margin-left:0}
}

@media print{
    #table-of-contents{
        display:none}

    @page{
        size: auto;
        margin: 25mm 25mm 25mm 25mm;}

    body {
        margin: 0px;}
}

@media screen and (max-width: 768px){
}

@media only screen and (max-width: 480px){
}

@media screen and (max-width: 768px){
    .tablet-hide{
        display:none}
}

@media screen and (max-width: 480px){
    .mobile-hide{
        display:none}
}

@media screen and (max-width: 480px){
}

@media screen and (max-width: 768px){
    #content{
        margin-left:0;
        padding: 1em 1em;}

    #content #content{
        padding:1.618em}

    #content.shift{
        position:fixed;
        min-width:100%;
        left:85%;
        top:0;
        height:100%;
        overflow:hidden}
}

@media screen and (min-width: 1400px){
    #content{
        background:rgba(0,0,0,0.05)}

    #content{
        background:#fcfcfc}
}

@media screen and (max-width: 768px){
    #copyright{
        width:85%;
        display:none}

    #copyright.shift{
        display:block}

    img{
        width:100%;
        height:auto}
}

@media screen and (max-width: 480px){
    #content .sidebar{
        width:100%}
}


.figure p{
    color:#000;
    font:italic 85%/1 arial,sans-serif;
    padding:1em 0;
}

.rotate-90{
    -webkit-transform:rotate(90deg);
    -moz-transform:rotate(90deg);
    -ms-transform:rotate(90deg);
    -o-transform:rotate(90deg);
    transform:rotate(90deg);
}

.rotate-270{
    -webkit-transform:rotate(270deg);
    -moz-transform:rotate(270deg);
    -ms-transform:rotate(270deg);
    -o-transform:rotate(270deg);
    transform:rotate(270deg);
}

#toggle-sidebar,
#table-of-contents .close-sidebar {
    display: none;
}

@media screen and (max-width: 768px) {
    #table-of-contents {
        display: none;
        width: 60%;
    }

    #table-of-contents h2 a {
        display: block;
    }

    #table-of-contents:target {
        display: block;
    }

    #copyright, #postamble {
        display: none;
    }

    #toggle-sidebar {
        background-color: #2980B9;
        display: block;
        margin-bottom: 1.6em;
        padding: 0.6em;
        text-align: center;
    }

    #toggle-sidebar h2 {
        color: white;
        font-size: 100%;
        line-height: 50px;
        margin: 0;
        padding: 0;
    }

    #table-of-contents .close-sidebar {
       color: rgba(255, 255, 255, 0.3);
       display: inline-block;
       margin: 0px 10px 0px 45px;
       padding: 10px;
    }
}

*{
    -webkit-box-sizing:border-box;
    -moz-box-sizing:border-box;
    box-sizing:border-box;
}

figcaption,figure,footer,header,hgroup,nav{
    display:block}

ins{
    background:#ff9;
    color:#000;
    text-decoration:none}

mark{
    background:#ff0;
    color:#000;
    font-style:italic;
    font-weight:bold}

small{
    font-size:85%}

sub,sup{
    font-size:75%;
    line-height:0;
    position:relative;
    vertical-align:baseline}

sup{
    top:-0.5em}

sub{
    bottom:-0.25em}

img{
    -ms-interpolation-mode:bicubic;
    vertical-align:middle;
    max-width:100%}

svg:not(:root){
    overflow:hidden}

figure{
    margin:0}

label{
    cursor:pointer}

legend{
    border:0;
    margin-left:-7px;
    padding:0;
    white-space:normal}

#content .danger,#content .error{
    background:#fdf3f2}

legend{
    display:block;
    width:100%;
    border:0;
    padding:0;
    white-space:normal;
    margin-bottom:24px;
    font-size:150%;
    *margin-left:-7px}

label{
    display:block;
    margin:0 0 0.3125em 0;
    color:#333;
    font-size:90%}

a{
    color:#2980B9;
    text-decoration:none;
    cursor:pointer}


a:hover,a:active{
    outline:0;
}

a:hover{
    color:#3091d1}

a:visited{
    color:#9B59B6}

.left{
    text-align:left}

.center{
    text-align:center}

.right{
    text-align:right}

hr{
    display:block;
    height:1px;
    border:0;
    border-top:1px solid #e1e4e5;
    margin:24px 0;
    padding:0}

#table-of-contents li{
    list-style:none;
    margin-left: 0px;
}

#table-of-contents header{
    height:32px;
    display:inline-block;
    line-height:32px;
    padding:0 1.618em;
    display:block;
    font-weight:bold;
    text-transform:uppercase;
    font-size:80%;
    color:#2980B9;
    white-space:nowrap}

#table-of-contents ul{
    margin-bottom:0}

#table-of-contents li.divide-top{
    border-top:solid 1px #404040}

#table-of-contents li.divide-bottom{
    border-bottom:solid 1px #404040}

#table-of-contents li.current{
    background:#e3e3e3}

#table-of-contents li.current a{
    color:gray;
    border-right:solid 1px #c9c9c9;
    padding:0.4045em 2.427em}

#table-of-contents li.current a:hover{
    background:#d6d6d6}

#table-of-contents li a{
    /* color:#404040; */
    padding:0.4045em 1.618em;
    position:relative;
    /* background:#fcfcfc; */
    border:none;
    /* border-bottom:solid 1px #c9c9c9; */
    /* border-top:solid 1px #c9c9c9; */
    padding-left:1.618em -4px}

#table-of-contents li.on a:hover,#table-of-contents li.current>a:hover{
    background:#fcfcfc}

#table-of-contents li ul li a{
    /* background:#c9c9c9; */
    padding:0.4045em 2.427em}

#table-of-contents li ul li ul li a{
    padding:0.4045em 3.236em}

#table-of-contents li.current ul{
    display:block}

/* #table-of-contents li ul{ */
/*     margin-bottom:0; */
/*     display:none} */

#table-of-contents .local-toc li ul{
    display:block}

#table-of-contents li ul li a{
    margin-bottom:0;
    color:#b3b3b3;
    font-weight:normal}

#table-of-contents a{
    display:inline-block;
    line-height:18px;
    padding:0.4045em 1.618em;
    display:block;
    position:relative;
    font-size:90%;
    color:#b3b3b3;
    direction: ltr;
}

#table-of-contents a:hover{
    background-color:#4e4a4a;
    cursor:pointer}

/* #text-table-of-contents { */
/*     overflow:scroll; */
/* } */

#table-of-contents{
    position:fixed;
    top:0;
    left:0;
    width:300px;
    overflow-x:hidden;
    overflow-y:scroll;
    height:100%;
    background:#343131;
    z-index:200;
    scrollbar-base-color: #1F1D1D;
    scrollbar-arrow-color: #b3b3b3;
    scrollbar-shadow-color: #1F1D1D;
    scrollbar-track-color : #343131;
}

#table-of-contents h2{
    z-index:200;
    background-color:#2980B9;
    text-align:center;
    padding:0.809em;
    display:block;
    color:#fcfcfc;
    font-size: 100%;
    margin-bottom:0.809em}

ul.nav li ul li {
    display: none;
}

ul.nav li ul li ul li {
    display: none;
}

ul.nav li.active ul li {
    display: inline;
}

ul.nav li.active ul li ul li {
    display: inline;
}

ul.nav li.active ul li a {
    background-color: #E3E3E3;
    color: #8099B0;
    border-right:solid 1px #c9c9c9 !important;
}

ul.nav li.active ul li.active a {
    background-color: #C9C9C9;
    color: black !important;
    font-weight: bold !important;
}

ul.nav li.active ul li.active ul li.active a {
    color: black !important;
    font-weight: bold !important;
    display: block !important;
}

ul.nav li.active ul li.active ul li a {
    color: #808080 !important;
    font-weight: normal !important;
    display: block !important;
}

ul.nav li.active ul li ul li a {
    display: none !important;
}


ul.nav li ul li ul li ul li {
    display: none !important; /* as long as nav is on multiple levels of ul */
    /* display: none; /* as long as nav is on multiple levels of ul *\/ */
}

ul.nav li.active > a {
    border-bottom:solid 1px #c9c9c9 !important; /* XXX Restrict it to 2nd level */
    border-right:solid 1px #c9c9c9 !important;
}

ul.nav li.active a {
    color: gray !important;
    font-weight:bold;
    background-color: white;
    border-right:solid 0px white !important;
}

ul.nav > li.active > a {
    color: black !important;
}

footer{
    color:#999}

footer p{
    margin-bottom:12px}

#copyright, #postamble{
    position:fixed;
    bottom:0;
    left:0;
    width:300px;
    color:#fcfcfc;
    background:#1f1d1d;
    border-top:solid 10px #343131;
    font-family:"Lato","proxima-nova","Helvetica Neue",Arial,sans-serif;
    font-size: 90%;
    z-index:400;
    padding:12px;
}

#postamble .author {
    font-size: 100%;
    margin-bottom: 0px;
}

#postamble .date {
    font-size: 90%;
    margin-bottom: 0px;
    color: #27AE60;
}

#postamble .creator,#postamble .validation {
    display:none;
}

#copyright a{
    color:#2980B9;
    text-decoration:none}

#copyright .rst-current-version{
    padding:12px;
    background-color:#272525;
    display:block;
    text-align:right;
    font-size:90%;
    cursor:pointer;
    color:#27AE60;
    *zoom:1}

#content img{
    max-width:100%;
    height:auto !important}

#content div.figure{
    margin-bottom:24px}

#content div.figure.align-center{
    text-align:center}

#content .section>img,#content .section>a>img{
    margin-bottom:24px}

.verse{
    border-left:5px solid #6AB0DE;
    background-color: #E7F2FA;
    padding: 6px 20px;
    font-style:italic;
}

#content .note .last,#content .attention .last,#content .caution .last,#content .danger .last,#content .error .last,#content .hint .last,#content .important .last,#content .tip .last,#content .warning .last,#content .seealso .last,#content .admonitiontodo .last{
    margin-bottom:0}

#content .admonition-title:before{
    margin-right:4px}

#content .section ol p,#content .section ul p{
    margin-bottom:12px}

#content h1 .headerlink,#content h2 .headerlink,#content h3 .headerlink,#content h4 .headerlink,#content h5 .headerlink,#content h6 .headerlink,#content dl dt .headerlink{
    display:none;
    visibility:hidden;
    font-size:14px}

#content h1 .headerlink:after,#content h2 .headerlink:after,#content h3 .headerlink:after,#content h4 .headerlink:after,#content h5 .headerlink:after,#content h6 .headerlink:after,#content dl dt .headerlink:after{
    visibility:visible;
    content:"";
    font-family:FontAwesome;
    display:inline-block}

#content h1:hover .headerlink,#content h2:hover .headerlink,#content h3:hover .headerlink,#content h4:hover .headerlink,#content h5:hover .headerlink,#content h6:hover .headerlink,#content dl dt:hover .headerlink{
    display:inline-block}

#content .sidebar{
    float:right;
    width:40%;
    display:block;
    margin:0 0 24px 24px;
    padding:24px;
    background:#f3f6f6;
    border:solid 1px #e1e4e5}

#content .sidebar p,#content .sidebar ul,#content .sidebar dl{
    font-size:90%}

#content .sidebar .last{
    margin-bottom:0}

#content .sidebar .sidebar-title{
    display:block;
    font-family:"Roboto Slab","ff-tisa-web-pro","Georgia",Arial,sans-serif;
    font-weight:bold;
    background:#e1e4e5;
    padding:6px 12px;
    margin:-24px;
    margin-bottom:24px;
    font-size:100%}

#content .footnote-reference,#content .citation-reference{
    vertical-align:super;
    font-size:90%}

span[id*='MathJax-Span']{
    color:#404040}

.math{
    text-align:center}

#footnotes{
    border-top:1px solid #e1e4e5;
    padding-top: 36px;
}

h2.footnotes{
    display:none;
}

.footnum, .footref{
    color: #2980b9;
    font-size: 170%;
    font-family:"Lato","proxima-nova","Helvetica Neue",Arial,sans-serif;
}

.footnum:before, .footref:before{
    content:"[";
}

.footnum:after, .footref:after{
    content:"]";
}

.footpara {
    color: #999;
    font-size: 90%;
    font-family:"Lato","proxima-nova","Helvetica Neue",Arial,sans-serif;
    padding-bottom: 8px;
    padding-left: 16px;
    padding-right: 16px;
    padding-top: 8px;
    line-height: 1.25em;
    /* display: inline; */
}
.highlight .hll { background-color: #ffffcc }
.highlight  { background: #f8f8f8; }
.highlight .c { color: #8f5902; font-style: italic } /* Comment */
.highlight .err { color: #a40000; border: 1px solid #ef2929 } /* Error */
.highlight .g { color: #000000 } /* Generic */
.highlight .k { color: #204a87; font-weight: bold } /* Keyword */
.highlight .l { color: #000000 } /* Literal */
.highlight .n { color: #000000 } /* Name */
.highlight .o { color: #ce5c00; font-weight: bold } /* Operator */
.highlight .x { color: #000000 } /* Other */
.highlight .p { color: #000000; font-weight: bold } /* Punctuation */
.highlight .ch { color: #8f5902; font-style: italic } /* Comment.Hashbang */
.highlight .cm { color: #8f5902; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #8f5902; font-style: italic } /* Comment.Preproc */
.highlight .cpf { color: #8f5902; font-style: italic } /* Comment.PreprocFile */
.highlight .c1 { color: #8f5902; font-style: italic } /* Comment.Single */
.highlight .cs { color: #8f5902; font-style: italic } /* Comment.Special */
.highlight .gd { color: #a40000 } /* Generic.Deleted */
.highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */
.highlight .gr { color: #ef2929 } /* Generic.Error */
.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: #00A000 } /* Generic.Inserted */
.highlight .go { color: #000000; font-style: italic } /* Generic.Output */
.highlight .gp { color: #8f5902 } /* Generic.Prompt */
.highlight .gs { color: #000000; font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: #a40000; font-weight: bold } /* Generic.Traceback */
.highlight .kc { color: #204a87; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #204a87; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #204a87; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #204a87; font-weight: bold } /* Keyword.Pseudo */
.highlight .kr { color: #204a87; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #204a87; font-weight: bold } /* Keyword.Type */
.highlight .ld { color: #000000 } /* Literal.Date */
.highlight .m { color: #0000cf; font-weight: bold } /* Literal.Number */
.highlight .s { color: #4e9a06 } /* Literal.String */
.highlight .na { color: #c4a000 } /* Name.Attribute */
.highlight .nb { color: #204a87 } /* Name.Builtin */
.highlight .nc { color: #000000 } /* Name.Class */
.highlight .no { color: #000000 } /* Name.Constant */
.highlight .nd { color: #5c35cc; font-weight: bold } /* Name.Decorator */
.highlight .ni { color: #ce5c00 } /* Name.Entity */
.highlight .ne { color: #cc0000; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #000000 } /* Name.Function */
.highlight .nl { color: #f57900 } /* Name.Label */
.highlight .nn { color: #000000 } /* Name.Namespace */
.highlight .nx { color: #000000 } /* Name.Other */
.highlight .py { color: #000000 } /* Name.Property */
.highlight .nt { color: #204a87; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #000000 } /* Name.Variable */
.highlight .ow { color: #204a87; font-weight: bold } /* Operator.Word */
.highlight .w { color: #f8f8f8; text-decoration: underline } /* Text.Whitespace */
.highlight .mb { color: #0000cf; font-weight: bold } /* Literal.Number.Bin */
.highlight .mf { color: #0000cf; font-weight: bold } /* Literal.Number.Float */
.highlight .mh { color: #0000cf; font-weight: bold } /* Literal.Number.Hex */
.highlight .mi { color: #0000cf; font-weight: bold } /* Literal.Number.Integer */
.highlight .mo { color: #0000cf; font-weight: bold } /* Literal.Number.Oct */
.highlight .sb { color: #4e9a06 } /* Literal.String.Backtick */
.highlight .sc { color: #4e9a06 } /* Literal.String.Char */
.highlight .sd { color: #8f5902; font-style: italic } /* Literal.String.Doc */
.highlight .s2 { color: #4e9a06 } /* Literal.String.Double */
.highlight .se { color: #4e9a06 } /* Literal.String.Escape */
.highlight .sh { color: #4e9a06 } /* Literal.String.Heredoc */
.highlight .si { color: #4e9a06 } /* Literal.String.Interpol */
.highlight .sx { color: #4e9a06 } /* Literal.String.Other */
.highlight .sr { color: #4e9a06 } /* Literal.String.Regex */
.highlight .s1 { color: #4e9a06 } /* Literal.String.Single */
.highlight .ss { color: #4e9a06 } /* Literal.String.Symbol */
.highlight .bp { color: #3465a4 } /* Name.Builtin.Pseudo */
.highlight .vc { color: #000000 } /* Name.Variable.Class */
.highlight .vg { color: #000000 } /* Name.Variable.Global */
.highlight .vi { color: #000000 } /* Name.Variable.Instance */
.highlight .il { color: #0000cf; font-weight: bold } /* Literal.Number.Integer.Long */
</style>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
        displayAlign: "center",
        displayIndent: "0em",

        "HTML-CSS": { scale: 100,
                        linebreaks: { automatic: "false" },
                        webFont: "TeX"
                       },
        SVG: {scale: 100,
              linebreaks: { automatic: "false" },
              font: "TeX"},
        NativeMML: {scale: 100},
        TeX: { equationNumbers: {autoNumber: "AMS"},
               MultLineWidth: "85%",
               TagSide: "right",
               TagIndent: ".8em"
             }
});
</script>
<script type="text/javascript"
        src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML"></script>
</head>
<body>
<div id="content">
<header>
<h1 class="title">tikz制图详解</h1>
</header><nav id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgheadline2">1. 简介</a>
<ul>
<li><a href="#orgheadline1">1.1. 前言</a></li>
</ul>
</li>
<li><a href="#orgheadline16">2. beginning</a>
<ul>
<li><a href="#orgheadline3">2.1. 准备工作</a></li>
<li><a href="#orgheadline4">2.2. quicktikz软件简介</a></li>
<li><a href="#orgheadline5">2.3. 使用standalone类</a></li>
<li><a href="#orgheadline6">2.4. 绘制</a></li>
<li><a href="#orgheadline7">2.5. 初识tikz制图</a></li>
<li><a href="#orgheadline8">2.6. 画网格</a></li>
<li><a href="#orgheadline10">2.7. 画直线</a>
<ul>
<li><a href="#orgheadline9">2.7.1. 直线带上箭头</a></li>
</ul>
</li>
<li><a href="#orgheadline11">2.8. 画圆</a></li>
<li><a href="#orgheadline12">2.9. 画椭圆</a></li>
<li><a href="#orgheadline13">2.10. 画弧线</a></li>
<li><a href="#orgheadline14">2.11. 画长方形</a></li>
<li><a href="#orgheadline15">2.12. 放大图形</a></li>
</ul>
</li>
<li><a href="#orgheadline20">3. 确定点</a>
<ul>
<li><a href="#orgheadline17">3.1. 点的定义</a></li>
<li><a href="#orgheadline18">3.2. 点的相对偏移</a></li>
<li><a href="#orgheadline19">3.3. 极座标</a></li>
</ul>
</li>
<li><a href="#orgheadline21">4. 确定路径</a></li>
<li><a href="#orgheadline22">5. 路径上的动作</a></li>
<li><a href="#orgheadline23">6. 确定样式</a></li>
<li><a href="#orgheadline25">7. node语法详解</a>
<ul>
<li><a href="#orgheadline24">7.1. node里面插入中文字</a></li>
</ul>
</li>
<li><a href="#orgheadline26">8. tree语法详解</a></li>
<li><a href="#orgheadline27">9. 确定绘图单元</a></li>
<li><a href="#orgheadline28">10. 绘图单元的演变</a></li>
<li><a href="#orgheadline29">11. help lines</a></li>
<li><a href="#orgheadline30">12. information text</a></li>
<li><a href="#orgheadline31">13. 变量声明</a></li>
<li><a href="#orgheadline32">14. scope环境</a></li>
<li><a href="#orgheadline33">15. 迭代语句</a></li>
<li><a href="#orgheadline34">16. 平移</a></li>
<li><a href="#orgheadline35">17. 旋转</a></li>
<li><a href="#orgheadline36">18. 反对称</a></li>
<li><a href="#orgheadline37">19. 多个node连接</a></li>
<li><a href="#orgheadline38">20. 绘制几何图形</a></li>
<li><a href="#orgheadline44">21. 电路图</a>
<ul>
<li><a href="#orgheadline39">21.1. 电路基本符号</a></li>
<li><a href="#orgheadline40">21.2. 连线问题</a></li>
<li><a href="#orgheadline41">21.3. 翻转问题</a></li>
<li><a href="#orgheadline42">21.4. 电压表和电流表</a></li>
<li><a href="#orgheadline43">21.5. info选项</a></li>
</ul>
</li>
<li><a href="#orgheadline47">22. 示例</a>
<ul>
<li><a href="#orgheadline45">22.1. 例子一</a></li>
<li><a href="#orgheadline46">22.2. 例子二</a></li>
</ul>
</li>
<li><a href="#orgheadline50">23. 附录</a>
<ul>
<li><a href="#orgheadline48">23.1. 单位</a></li>
<li><a href="#orgheadline49">23.2. 参考资料</a></li>
</ul>
</li>
</ul>
</div>
</nav>


<div class="outline-2">
<h2 id="orgheadline2">简介</h2>
<div class="outline-text-2" id="text-1">
</div><div class="outline-3">
<h3 id="orgheadline1">前言</h3>
<div class="outline-text-3" id="text-1-1">
<p>
tikz制图详解
</p>
</div>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline16">beginning</h2>
<div class="outline-text-2" id="text-2">
</div><div class="outline-3">
<h3 id="orgheadline3">准备工作</h3>
<div class="outline-text-3" id="text-2-1">
<p>
这里所谓的准备工作当然指你的 LaTeX 编译环境配置好，然后tikz宏包的加载是必须的。
</p>


<p>
tikz有两种使用方法，一种命令式的，一种环境式的。命令式用tikz命令包围起来，命令式是inline模式的。环境式用tikzpicture环境命令包围起来。如下所示：
</p>

<div class="highlight"><pre><span></span><span class="k">\tikz</span><span class="nb">{</span><span class="k">\draw</span> (1,0) -- (0,1) -- (-1,0) -- (0,-1) -- cycle;<span class="nb">}</span>

<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\draw</span> (1,0) -- (0,1) -- (-1,0) -- (0,-1) -- cycle;
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>

<p>
inline模式对于注重内容的用户来说会用的较少，有时可能自己建的某些宏包底层会使用到tikz命令。但不管是注重华丽表现效果的用户还是注重内容的用户，总是会有需求需要某一整张图片来表达某些内容，而tikz以及其他基于tikz的宏包在命令行绘图这个领域可以说是很优秀的，这绝不是那些只能绘制基本的线条或者其他的形状的图形包所能比的。下面将主要使用tikzpicture环境命令模式。
</p>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline4">quicktikz软件简介</h3>
<div class="outline-text-3" id="text-2-2">
<p>
我自己利用PyQt写了一个小软件，名字叫quicktikz，能够一边画图一边预览，目前还很粗糙，不过只要继续不断优化下去，就会变得很实用了的。
</p>

<p>
有兴趣的读者可以了解一下，
</p>

<p>
github地址在 <a href="https://github.com/a358003542/quicktikz">这里</a> 。
</p>
</div>
</div>

<div class="outline-3">
<h3 id="orgheadline5">使用standalone类</h3>
<div class="outline-text-3" id="text-2-3">
<p>
用tikz绘制某个单独的图片而不是一般的A4页面推荐使用 <strong>standalone</strong> 类。如下所示:
</p>
<div class="highlight"><pre><span></span><span class="k">\documentclass</span><span class="na">[tikz,border=2pt]</span><span class="nb">{</span>standalone<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\draw</span><span class="na">[step=1,color=gray!40]</span> (-2,-2) grid (2,2);
<span class="k">\draw</span><span class="na">[-&gt;]</span> (-3,0) -- (3,0);
<span class="k">\draw</span><span class="na">[-&gt;]</span> (0,-3) -- (0,3);
<span class="k">\draw</span> (0,0) circle (1); 
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</pre></div>
</div>
</div>

<div class="outline-3">
<h3 id="orgheadline6">绘制</h3>
</div>

<div class="outline-3">
<h3 id="orgheadline7">初识tikz制图</h3>
</div>

<div class="outline-3">
<h3 id="orgheadline8">画网格</h3>
<div class="outline-text-3" id="text-2-6">
<p>
画网格主要用于辅助绘图，其中 <code>help lines</code> 是个不错的参数设置。此外 <code>step</code> 用来控制网格之间的间距，可以color来设置网格的颜色，不过一般没那个必要。然后接下来第一个坐标点是网格的左底点，第二个坐标点是网格的右定点。
</p>

<pre>
\begin{tikzpicture}
\draw[help lines] ( -5,-5 ) grid ( 5, 5);
\end{tikzpicture}
</pre>

<p>
我们看到tikz的每一条命令最后都要跟一个分号“;”。
</p>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline10">画直线</h3>
<div class="outline-text-3" id="text-2-7">
<pre>
\begin{tikzpicture}
\draw[help lines] ( -5,-5 ) grid ( 5, 5);
\draw[red] (-3,0) -- (3,0);
\draw[red] (0,-3) -- (0,3);
\end{tikzpicture}
</pre>

<p>
画直线就是两个坐标点相连，中间 <code>--</code> 符号表示直线的意思。之前网格是grid表示网格的意思。如果几个点用 <code>--</code> 符号连接起来，表示这几个点连着来画几条折线，有多个画直线命令依次执行的意思。
</p>

<p>
具体显示效果如下：
</p>


<figure>
<p><img src="images/画直线.png" alt="画直线.png">
</p>
</figure>
</div>

<div class="outline-4">
<h4 id="orgheadline9">直线带上箭头</h4>
<div class="outline-text-4" id="text-2-7-1">
<p>
draw命令可以跟上可选项 <strong>-&gt;</strong> ，这样直线的右端就有一个箭头了。此外还有: <strong>-&gt;&gt;</strong> ， <strong>-&gt;|</strong> ， <strong>-to</strong> ， <strong>-latex</strong> ， <strong>-stealth</strong> 。
</p>

<p>
他们的效果从上到下依次演示如下：
</p>
<pre>
\begin{tikzpicture}
\draw[-&gt;] (-3,3) -- (3,3);
\draw[-&gt;&gt;] (-3,2) -- (3,2);
\draw[-&gt;|] (-3,1) -- (3,1);
\draw[-to] (-3,0) -- (3,0);
\draw[-latex] (-3,-1) -- (3,-1);
\draw[-stealth] (-3,-2) -- (3,-2);
\end{tikzpicture}
</pre>


<figure>
<p><img src="images/直线带箭头.png" alt="直线带箭头.png">
</p>
</figure>

<p>
类似的还有左端比如 <strong>&lt;-</strong> ，或者两端比如 <strong>latex-latex</strong> ，这里就不多说了。
</p>
</div>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline11">画圆</h3>
<div class="outline-text-3" id="text-2-8">
<pre>
\begin{tikzpicture}
\draw[step=1,color=gray!40] (-2,-2) grid (2,2);
\draw[-&gt;] (-3,0) -- (3,0);
\draw[-&gt;] (0,-3) -- (0,3);
\draw (0,0) circle (1); 
\end{tikzpicture}
</pre>

<p>
其中第一个点是圆中心，circle表示画圆，第二个参数是半径大小。
</p>


<figure>
<p><img src="images/画圆.png" alt="画圆.png">
</p>
</figure>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline12">画椭圆</h3>
<div class="outline-text-3" id="text-2-9">
<pre>
\begin{tikzpicture}
\draw[step=1,color=gray!40] (-2,-2) grid (2,2);
\draw[-&gt;] (-3,0) -- (3,0);
\draw[-&gt;] (0,-3) -- (0,3);
\draw (0,0) ellipse (1 and 0.5);
\end{tikzpicture}
</pre>

<p>
这里第一个点是椭圆的中心点，ellipse表示画椭圆，后面参数两个值第一个是a也就是椭圆的半长轴，第二个是b也就是椭圆的半短轴。
</p>


<figure>
<p><img src="images/画椭圆.png" alt="画椭圆.png">
</p>
</figure>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline13">画弧线</h3>
<div class="outline-text-3" id="text-2-10">
<pre>
\begin{tikzpicture}
\draw[step=1,color=gray!40] (-2,-2) grid (2,2);
\draw[-&gt;] (-3,0) -- (3,0);
\draw[-&gt;] (0,-3) -- (0,3);
\draw[color=gray!40] (0,0) circle (1); %
\draw[color=red] (1,0) arc (0:45:1);
\draw[color=gray!40] (0,0) ellipse (1 and 0.5);
\draw[color=green] (1,0) arc (0:60:1 and 0.5);
\end{tikzpicture}
</pre>

<p>
最基本的画弧线的命令如上代码第5行，其中第一个点是弧线的起点，然后arc表示画弧线，接下来括号里面的三个参数：第一个参数是开始的角度，第二个参数是结束时的角度，第三个参数是弧线对应圆的半径。对比第4行画的浅灰色的圆可以看出他们之间的关系。
</p>

<p>
上面代码第7行画弧线增加了一个and 和一个参数，这个时候画的弧线是根据椭圆来的，其中1是椭圆的半长轴，0.5是椭圆的半短轴。对比第6行画的浅灰色的椭圆可以看出他们的关系。
</p>


<figure>
<p><img src="images/画弧线.png" alt="画弧线.png">
</p>
</figure>
</div>
</div>

<div class="outline-3">
<h3 id="orgheadline14">画长方形</h3>
<div class="outline-text-3" id="text-2-11">
<pre>
\begin{tikzpicture}[scale=2]
\draw[step=1,color=gray!40] (-2,-2) grid (2,2);
\draw[color=red] (-1,-1) rectangle (1,1);
\end{tikzpicture}
</pre>

<p>
这里使用了可选项 <strong>color=red</strong> 来控制线条的颜色，然后画长方形的第一个点是左底点，rectangle表示画长方形，第二个点表示右顶点。
</p>



<figure>
<p><img src="images/画长方形.png" alt="画长方形.png">
</p>
</figure>
</div>
</div>



<div class="outline-3">
<h3 id="orgheadline15">放大图形</h3>
<div class="outline-text-3" id="text-2-12">
<p>
在tikzpicture环境后面跟上可选项 <code>[scale=2]</code> ，即将图形放大两倍。
</p>
</div>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline20">确定点</h2>
<div class="outline-text-2" id="text-3">
</div><div class="outline-3">
<h3 id="orgheadline17">点的定义</h3>
<div class="outline-text-3" id="text-3-1">
<p>
使用coordinate命令或者path命令附带coordinate来定义一个点。 <em>注意</em> ，
</p>

<pre>
\begin{tikzpicture}
\draw[step=1,color=gray!40] (-2,-2) grid (2,2);
\path (1,1) coordinate (p1);
\coordinate (p2) at ( 2, 0);
\draw[dotted, red] (p1) -- (p2)  ;
\end{tikzpicture}
</pre>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline18">点的相对偏移</h3>
<div class="outline-text-3" id="text-3-2">
<p>
现在加上这样两行代码：
</p>
<pre>
\begin{tikzpicture}[scale=2]
\draw[step=1,color=gray!40] (-2,-2) grid (2,2);
\draw[latex-latex, red] (0,-2) -- ++(-1,1) -- ++(-1,-1);
\draw[dashed, blue] (0,1) -- +(-1,1) -- +(-2,0);
\end{tikzpicture}
</pre>


<figure>
<p><img src="images/点的相对偏移.png" alt="点的相对偏移.png">
</p>
</figure>

<p>
tikz中有一个重要的概念，当前点，然后点可以通过当前点根据相对偏移来确定一个新的点。上面代码第9行的 <em>++</em> 符号和第10行的 <em>+</em> 符号都根据当前点然后进行了$&Delta; x$和$&Delta; y$的相对偏移从而确定了一个新的点。这两个符号的区别在于是不是更新当前点数据。++符号更新当前点，而+符号不更新。
</p>


<p>
++适合描述一连串逐渐变化的点，+适合描述多个点围绕着一个点变化的情况。
</p>
</div>
</div>
<div class="outline-3">
<h3 id="orgheadline19">极座标</h3>
<div class="outline-text-3" id="text-3-3">
<p>
tikz中的点也支持极座标表示，(30:1cm)，第一个参数是极座标里面的角度，第二个参数是半径。
</p>
</div>
</div>
</div>



<div class="outline-2">
<h2 id="orgheadline21">确定路径</h2>
</div>

<div class="outline-2">
<h2 id="orgheadline22">路径上的动作</h2>
</div>

<div class="outline-2">
<h2 id="orgheadline23">确定样式</h2>
<div class="outline-text-2" id="text-6">
<p>
style，特定图形的样式。定义一个样式比如style001如下：
<code>style001/.style={color=red,fill=red!20}</code>
</p>

<p>
原有样式修改
\verb+help lines/.append style=blue!50+<br >
附加之后最新的样式胜出。
</p>

<p>
\subsection{样式带参数}
</p>
\begin{tikzpicture}[outline/.style={draw=#1,thick,fill=#1!50}]
\node [outline=red] at (0,1) {red};
\node [outline=blue] at (0,0) {blue};
\end{tikzpicture}

<p>
\subsection{样式参数有默认值}
</p>
\begin{tikzpicture}[outline/.style={draw=#1,thick,fill=#1!50},
outline/.default=black]
\node [outline]
at (0,1) {default};
\node [outline=blue] at (0,0) {blue};
\end{tikzpicture}
</div>
</div>

<div class="outline-2">
<h2 id="orgheadline25">node语法详解</h2>
<div class="outline-text-2" id="text-7">
</div><div class="outline-3">
<h3 id="orgheadline24">node里面插入中文字</h3>
<div class="outline-text-3" id="text-7-1">
<div class="highlight"><pre><span></span><span class="k">\documentclass</span><span class="na">[tikz,border=2pt]</span><span class="nb">{</span>standalone<span class="nb">}</span>

<span class="c">%================字體================%</span>
<span class="k">\RequirePackage</span><span class="nb">{</span>fontspec<span class="nb">}</span>
<span class="k">\usepackage</span><span class="nb">{</span>xcolor<span class="nb">}</span>

<span class="c">%中文環境</span>
<span class="k">\RequirePackage</span><span class="na">[CJKnumber=true]</span><span class="nb">{</span>xeCJK<span class="nb">}</span>

<span class="k">\newfontfamily</span><span class="nb">{</span><span class="k">\yanti</span><span class="nb">}{</span>颜体<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>

<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>

<span class="k">\node</span><span class="nb">{</span><span class="k">\fontspec</span><span class="na">[Scale=4,Color=red]</span><span class="nb">{</span>颜体<span class="nb">}</span> 新春快乐<span class="nb">}</span> ;

<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>

<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</pre></div>
</div>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline26">tree语法详解</h2>
</div>

<div class="outline-2">
<h2 id="orgheadline27">确定绘图单元</h2>
</div>

<div class="outline-2">
<h2 id="orgheadline28">绘图单元的演变</h2>
</div>


<div class="outline-2">
<h2 id="orgheadline29">help lines</h2>
<div class="outline-text-2" id="text-11">
<div class="highlight"><pre><span></span><span class="k">\tikzset</span><span class="nb">{</span>help lines/.style= <span class="nb">{</span>step=0.5cm,color=gray!40,very thin<span class="nb">}}</span>
<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\draw</span><span class="na">[help lines]</span> (0,0) grid (5,5);
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>
</div>
</div>



<div class="outline-2">
<h2 id="orgheadline30">information text</h2>
<div class="outline-text-2" id="text-12">
<div class="highlight"><pre><span></span><span class="k">\tikzset</span><span class="nb">{</span>information text/.style=<span class="nb">{</span>rounded corners,fill=red!10,inner sep=1ex<span class="nb">}}</span>

<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\node</span><span class="na">[right, text width = 6cm,information text]</span> <span class="nb">{</span>这是一段测试文字。<span class="nb">}</span>;
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline31">变量声明</h2>
<div class="outline-text-2" id="text-13">
<p>
<a href="http://tex.stackexchange.com/questions/47178/what-is-the-preferred-way-of-defining-a-tikz-constant">参考网站</a>
</p>

<p>
def命令可用，在里面声明一个变量。
</p>

<p>
pgfmathsetmacro命令和def一样可用来声明变量，不同是里面可以放着一些数学运算公式，tikz会将其先运算再赋值。
</p>
</div>
</div>



<div class="outline-2">
<h2 id="orgheadline32">scope环境</h2>
<div class="outline-text-2" id="text-14">
<p>
scope环境就是作用域控制，一个局域环境，参数只影响内部，外部的参数也影响不进来，不过值得一提的是，定义的点外面也可以用。
</p>

<p>
scope环境一个有用的特性的里面的clip命令不会影响到外面。
</p>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline33">迭代语句</h2>
<div class="outline-text-2" id="text-15">
<div class="highlight"><pre><span></span><span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\draw</span><span class="na">[help lines]</span> (0,0) grid (3,2);
<span class="k">\foreach</span> <span class="k">\x</span> in <span class="nb">{</span>0,1,...,4<span class="nb">}</span>
<span class="k">\draw</span><span class="na">[xshift=\x cm]</span> (0,-1) -- (0,1);
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>

<p>
其中&#x2026;表示一直这样有规律下去生成迭代列表。迭代语句有很多用法，详见后面的具体例子。
</p>
</div>
</div>




<div class="outline-2">
<h2 id="orgheadline34">平移</h2>
<div class="outline-text-2" id="text-16">
<p>
<code>xshift</code> ，x坐标轴平移。  <code>yshift</code> ，y坐标轴平移。 <code>rotate</code> ，旋转 。 注意xshift默认的单位并不是cm，如果要单位是cm需要写出来。
</p>

<div class="highlight"><pre><span></span><span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\draw</span><span class="na">[help lines]</span> (0,0) grid (3,2);
<span class="k">\draw</span> (0,0) -- (1,1);
<span class="k">\draw</span><span class="na">[red]</span> (0,0) -- ([xshift=1cm] 1,1);
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>
</div>
</div>

<div class="outline-2">
<h2 id="orgheadline35">旋转</h2>
<div class="outline-text-2" id="text-17">
<p>
后面加上可选项 <code>rotate=30</code> 即可，意思是图形逆时针旋转30度。
</p>

<div class="highlight"><pre><span></span><span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\draw</span> (0,0)[rotate=30]  ellipse (2 and 1);
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline36">反对称</h2>
<div class="outline-text-2" id="text-18">
<p>
xscale=-1或者yscale=-1就刚好相对y轴或x轴反对称。
</p>




<p>
\subsection{node命令中点的定义}
</p>

\begin{tikzpicture}
\node (node001) at (0,2) [draw] {test};
\end{tikzpicture}

<p>
从这里可以看到只要写上draw选项外面就会加上一个长方形，也就是shape的默认选项是rectangle。如果你不希望外面有长方形，不写draw选项即可。
</p>

<p>
这里通过node命令定义了一个点，node001，在(0,2)那里。后面是可以使用的。
</p>

\begin{tikzpicture}
\node (node001) at (0,2) [draw] {node001};
\node (node002) at (-2,0) [draw] {node002};
\node (node003) at (2,0) [draw] {node003};
\draw (node cs:name=node003,anchor=north) |- (0,1);
\draw (node002.north) |- (0,1) -| (node cs:name=node001,anchor=south);
\end{tikzpicture}

<p>
这里通过\textbf{node cs:name=node003}来获取之前那个node所在的点，然后通过\textbf{anchor=north}来定义那个node的接口在北边。除此之外的选项还有：\textbf{south}，\textbf{east}，\textbf{west}。这里\textbf{|-}似乎是画垂直拐线的意思。上面的语法简写为可以node002.north。
</p>

<p>
此外还有\textbf{angle}选项控制node接口的开口角度。
</p>

<p>
\subsection{两个点定义出一个点}
</p>
\begin{Verbatim}
\begin{tikzpicture}
\node (p1) at (30:1) {$p_1$} ;
\node (p2) at (75:1) {$p_2$} ;
\draw (-0.2,0) -- (1.2,0) node[right] (xline) {$q_1$};
\draw (2,-0.2) -- (2,1.2) node[above] (yline) {$q_2$};

\draw[->] (p1) -- (p1 |- xline);
\end{tikzpicture}
\end{Verbatim}

<p>
这种形式(p1 |- xline)表示取第一个点的x和第二个点的y组成一个新的点。如果是(p1 -| xline)表示取第二个点的x和第一个点的y组成一个新的点。
</p>

\begin{tikzpicture}
\node (p1) at (30:1) {$p_1$} ;
\node (p2) at (75:1) {$p_2$} ;
\draw (-0.2,0) -- (1.2,0) node[right] (xline) {$q_1$};
\draw (2,-0.2) -- (2,1.2) node[above] (yline) {$q_2$};

\draw[->] (p1) -- (p1 |- xline);
\end{tikzpicture}



<p>
\subsection{两个path的交点}
</p>
\begin{Verbatim}
\begin{tikzpicture}[scale=3]
\draw[help lines] (0,0) grid (2,2);
\coordinate (A) at (0,0);
\coordinate (B) at (2,0.5);
\coordinate (C) at (2,0);
\coordinate (D) at (0,2);
\shade[ball color=red](A) circle (0.025) node[below] {A};
\shade[ball color=red](B) circle (0.025) node[below] {B};
\shade[ball color=red](C) circle (0.025) node[below] {C};
\shade[ball color=red](D) circle (0.025) node[below] {D};
\draw[name path=AB] (A) -- (B);
\draw[name path=CD] (C) -- (D);
\path[name intersections={of=AB and CD}] (intersection-1) coordinate (P);
\shade[ball color=red](P) circle (0.025) node[below] {P};
\end{tikzpicture}
\end{Verbatim}


<p>
\usetikzlibrary{intersections,calc}
\tikzset{help lines/.style= {step=0.5cm,color=gray!40,very thin}}
</p>
\begin{tikzpicture}[scale=3]
\draw[help lines] (0,0) grid (2,2);
\coordinate (A) at (0,0);
\coordinate (B) at (2,0.5);
\coordinate (C) at (2,0);
\coordinate (D) at (0,2);
\shade[ball color=red](A) circle (0.025) node[below] {A};
\shade[ball color=red](B) circle (0.025) node[below] {B};
\shade[ball color=red](C) circle (0.025) node[below] {C};
\shade[ball color=red](D) circle (0.025) node[below] {D};
\draw[name path=AB] (A) -- (B);
\draw[name path=CD] (C) -- (D);
\path[name intersections={of=AB and CD}] 
(intersection-1) coordinate (P);
\shade[ball color=red](P) circle (0.025) node[below] {P};
\end{tikzpicture}

<p>
这个例子用到了点的定义，点的标出，以及path交点的定义，要用到library：\textbf{intersections}。有时候有些路径你不希望显示出来那么就用path命令来定义路径。
</p>

<p>
\subsubsection{给新交点取名字}
用\textbf{by}选项可以给画出来的交点取一个名字，默认的\\intersection-1之类的也可以使用。此外还可以加上选项：
</p>
\begin{Verbatim}
\path [name intersections={of=D and E, 
by={[label=above:$C$]C, [label=below:$C'$]C'}}];
\end{Verbatim}



<p>
\subsection{点的运算}
在进行下面说的数学运算之前需要加载calc宏包：<br >
\verb+\usetikzlibrary{calc}+
</p>

<p>
基本格式是：<br >
\verb+([options]\((一些运算)\))+
</p>

<p>
这里\verb+$$+表示这里有一些数学运算。里面的基本格式如下：<br >
\verb+&lt;factor&gt;*&lt;点&gt;&lt;其他修饰&gt;+
</p>

\begin{Verbatim}
\begin{tikzpicture}[scale=3]
\draw [help lines] (0,0) grid (3,2);
\fill [red] ($2*(1,1)$) circle (2pt);
\fill [green] (${1+1}*(1,0.5)$) circle (2pt);
\fill [blue] ($cos(0)*sin(90)*(1,1)$) circle (2pt);
\fill [black] (${3*(4-3)}*(1,0.5)$) circle (2pt);
\end{tikzpicture}
\end{Verbatim}

<p>
第一个红点是点(1,1)，然后x和y都乘以2从而得到新点。后面情况类似，不同的是前面的乘法还可以加入更多的运算。
</p>

\begin{tikzpicture}[scale=3]
\draw [help lines] (0,0) grid (3,2);
\fill [red] ($2*(1,1)$) circle (2pt);
\fill [green] (${1+1}*(1,0.5)$) circle (2pt);
\fill [blue] ($cos(0)*sin(90)*(1,1)$) circle (2pt);
\fill [black] (${3*(4-3)}*(1,0.5)$) circle (2pt);
\end{tikzpicture}

<p>
这里有点类似矢量运算计算出点的位置，前面计算出乘量因子，然后后面一个矢量偏移量。
</p>


<p>
\section{计算两个点之间的距离}
</p>
\begin{Verbatim}
\begin{tikzpicture}
\coordinate[label=left:\textcolor{blue}{$A$}] (A)
 at ($(0,0) +0.1*(rand,rand)$) ;
\coordinate[label=right:\textcolor{blue}{$B$}] (B)
 at ($(1.25,0.25) +0.1*(rand,rand)$) ;

\draw (A) -- (B);

\draw  let
\p1 = ($ (B) - (A) $),
\n1 = {veclen(\x1,\y1)}
in
(A) circle (\n1)
(B) circle (\n1);

\end{tikzpicture}
\end{Verbatim}

\begin{tikzpicture}
\coordinate[label=left:\textcolor{blue}{$A$}] (A) 
at ($(0,0) +0.1*(rand,rand)$) ;
\coordinate[label=right:\textcolor{blue}{$B$}] (B)
 at ($(1.25,0.25) +0.1*(rand,rand)$) ;

\draw (A) -- (B);

\draw  let
\p1 = ($ (B) - (A) $),
\n1 = {veclen(\x1,\y1)}
in
(A) circle (\n1)
(B) circle (\n1);

\end{tikzpicture}

<p>
\textbf{let ... in ...}语句可以放在任何path命令的任何位置来控制变量的计算和定义。
\textbackslash p\textit{<digit>}定义的是点的变量，\textbackslash n\textit{<digit>}定义的是数值的变量，后面可以跟数字从而定义多个变量。
</p>

<p>
任何点变量都可以用\textbackslash x\textit{<digit>}和\textbackslash y\textit{<digit>}来引用该点的x坐标和y坐标。
</p>

<p>
\textbf{veclen}函数计算某个矢量的长度。
</p>



<p>
\section{线条}
path路径是最基本的命令，draw命令等价于\verb+\path[draw]+，fill命令等价于\verb+\path[fill]+，filldraw命令等价于\verb+\path[draw,fill]+，其他clip，shade命令情况类似。
</p>

<p>
\subsection{虚线和点线}
线条除了之前说的dashed和dotted两种样式之外，还有loosely dashed，densely dashed和loosely dotted， densely dotted。比如：\tikz{\draw[loosely dashed] (0,0) -- (1,0);} <code>~ \tikz{\draw[dashed] (0,0) -- (1,0);} ~</code> \tikz{\draw[densely dashed] (0,0) -- (1,0);}，这是dashed的三种，下面是dotted的三种：\tikz{\draw[loosely dotted] (0,0) -- (1,0);} <code>~ \tikz{\draw[dotted] (0,0) -- (1,0);} ~</code> \tikz{\draw[densely dotted] (0,0) -- (1,0);}。
</p>

<p>
\subsection{线条的粗细}
</p>
\begin{tikzpicture}
\draw [ultra thick] (0,1) -- (2,1);
\draw [thick] (0,0.5) -- (2,0.5);
\draw [thin] (0,0) -- (2,0);
\end{tikzpicture}

<p>
其他选项还有\textbf{ultra thin}, \textbf{very thin}, \textbf{thin}, \textbf{semithick},  \textbf{thick},\\ \textbf{very thick} and \textbf{ultra thick}
还有\textbf{help lines}选项那种很淡灰的样式。
</p>

<p>
或者直接通过可选项line width来定义。
</p>

\begin{tikzpicture}
\draw [line width=0.4pt] (0,0) -- (2,0);
\draw[red]  (0,1) -- (2,1);
\draw [line width=0.2cm] (4,.75) -- (5,.25);
\end{tikzpicture}


<p>
\subsection{圆圆的拐角}
</p>
\begin{tikzpicture}
\draw [<->, rounded corners, thick, purple] (0,2) -- (0,0) -- (3,0);
\end{tikzpicture}

<p>
\subsection{线条延长}
\href{http://tex.stackexchange.com/questions/58589/tikz-how-to-extend-the-curve-beyond-the-points}{参考网站}
</p>

<p>
\textbf{shorten >=-0.4cm,shorten <=-0.4cm}<br >
可以通过类似上面的选项让两个点确定的线条延长，不过这种延长是不能用intersection方法处理的。其中&gt;=表示到第二个点超过的部分，负值表示超过；然后&lt;=表示到第一个点超过的部分，正值则缩回去了。
</p>

<p>
第二种线条延长的方法实际上是通过一个新的点来起作用的，这个点定义的语法的如下例所示：\href{http://tex.stackexchange.com/questions/29368/tikz-how-to-find-the-intersection-of-two-extended-lines}{参考网站}
</p>


\begin{Verbatim}
\usetikzlibrary{calc,intersections}
\begin{tikzpicture}
\fill (0,0) circle [radius=2pt] node (A) [label=A] {};
\fill (2,1) circle [radius=2pt] node (B) [label=B] {};
\fill (3.2,1) circle [radius=2pt] node (C) [label=C] {};
\fill (4,0.5) circle [radius=2pt] node (D) [label=D] {};
\draw [name path=AB] (A) -- ($(B)!-1cm!(A)$);
\draw [name path=CD] (D) -- ($(C)!-1cm!(D)$);

\fill [red,name intersections={of={AB and CD}}] (intersection-1) circle [radius=2pt];
\end{tikzpicture}
\end{Verbatim}


<p>
\usetikzlibrary{calc,intersections}
</p>
\begin{tikzpicture}
\fill (0,0) circle [radius=2pt] node (A) [label=A] {};
\fill (2,1) circle [radius=2pt] node (B) [label=B] {};
\fill (3.2,1) circle [radius=2pt] node (C) [label=C] {};
\fill (4,0.5) circle [radius=2pt] node (D) [label=D] {};
\draw [name path=AB] (A) -- ($(B)!-1cm!(A)$);
\draw [name path=CD] (D) -- ($(C)!-1cm!(D)$);

\fill [red,name intersections={of={AB and CD}}] (intersection-1) circle [radius=2pt];
\end{tikzpicture}




<p>
\section{贝塞尔曲线}
贝塞尔曲线是四个点画出一个曲线，具体我现在还不太清楚。其中第一个点是起点，第四个点终点，然后另外两个点是控制点。
</p>

\begin{Verbatim}
\begin{tikzpicture}[scale=3]
\draw[help lines] (0,0) grid (2,2);
\draw[color=red] (0,0) .. controls (1,1) and (2,1) .. (2,0);
\shade[ball color=gray!10] (0,0) circle (0.1);
\shade[ball color=gray!40] (1,1) circle (0.1);
\shade[ball color=gray!70] (2,1) circle (0.1);
\shade[ball color=gray] (2,0) circle (0.1);
\end{tikzpicture}
\end{Verbatim}

<p>
上面第2行代码就是画贝塞尔曲线的代码。
</p>

\begin{tikzpicture}[scale=3]
\draw[help lines] (0,0) grid (2,2);
\draw[color=red] (0,0) .. controls (1,1) and (2,1) .. (2,0);
\shade[ball color=gray!10] (0,0) circle (0.1);
\shade[ball color=gray!40] (1,1) circle (0.1);
\shade[ball color=gray!70] (2,1) circle (0.1);
\shade[ball color=gray] (2,0) circle (0.1);
\end{tikzpicture}



<p>
\section{弧线}
\subsection{弧线反向}
</p>
\begin{Verbatim}
\begin{tikzpicture}
\draw[help lines] (0,0) grid (5,5);
\fill[green!20] (0,0) -- (3,0)
arc (0:30:3)  -- cycle;
\draw (2,2) arc (0:-90:-2);
\end{tikzpicture}
\end{Verbatim}


\begin{tikzpicture}
\draw[help lines] (0,0) grid (5,5);
\fill[green!20] (0,0) -- (3,0)
arc (0:30:3)  -- cycle;
\draw (2,2) arc (0:-90:-2);
\end{tikzpicture}

<p>
我们可以看到画弧线如果要中心点不是在左边而是在右边，那么可以通过让半径为负值和调整角度获得。其中角度的计算是顺时针的负值。
</p>




<p>
\section{node命令}
node命令主要用于插入文本，不过最好将其理解为接口。\XeLaTeX 文档内部各个命令等都可以使用，然后外面包围一个形状，如rectangle长方形，circle圆等。
</p>

\begin{Verbatim}
\newcommand{\testlinea}{this is a test line a}
\newcommand{\testlineb}{this is a test line b}
\begin{tikzpicture}
%\fill[cyan] (0,0) circle  (1) ;
\node[shape=rectangle,draw,inner sep=10pt] at (0,0) (a) {\testlinea};
\node[shape=rectangle,draw,inner sep=10pt] at (0,-3) (b) {\testlineb};
\draw[-latex](a) -- (b);
\end{tikzpicture}
\end{Verbatim}

<p>
这里我们看到\LaTeX 里面自定义的命令是可以正常使用的，然后可选项\textbf{shape}的意思是外面包围的形状是长方形，\textbf{draw}就是画这个形状是用的draw命令方法，比如fill就会填充。\textbf{inner sep}控制外面的形状和内部文本之间的间距。 然后\textbf{at (0,0)}控制整个图形的位置，然后\textbf{(a)}表示整个图形的名字，后面可以调用的，可以看作接口把。然后后面就是\LaTeX 的内容了。
</p>

<p>
\newcommand{\testlinea}{this is a test line a}
\newcommand{\testlineb}{this is a test line b}
</p>
\begin{tikzpicture}
%\fill[cyan] (0,0) circle  (1) ;
\node[shape=rectangle,draw,inner sep=10pt] at (0,0) (a) {\testlinea};
\node[shape=rectangle,draw,inner sep=10pt] at (0,-3) (b) {\testlineb};
\draw[-latex](a) -- (b);
\end{tikzpicture}

<p>
\subsection{插入文本的位置}
node命令的可选项\textbf{left}，\textbf{right}，\textbf{above}，\textbf{below}用于控制插入文本的位置。此外还有\textbf{above right}，\textbf{below right}，\textbf{above left} ，\textbf{below left}等。
</p>

<p>
\subsection{文本对齐控制}
用\textbf{align=left}，\textbf{align=right}，\textbf{align=center}来控制。
</p>

<p>
\subsection{在画图形的时候插入文本}
</p>
\begin{tikzpicture}
\draw (1,1) node {text} -- (2,2);
\end{tikzpicture}

<p>
在画图形的时候某个当前点下可以直接node接某个文本。
</p>

<p>
node命令在path的任何位置都可插入，具体是path完成之后才绘制出node要插入的内容。
</p>

<p>
node的\textbf{inner sep}选项调整node文本和外围的shape之间的间距。
</p>

<p>
node的\textbf{minimum size}选项控制node没有文本时候外围shape的大小，装上文本可以更大。
</p>

<p>
node可以通过\textbf{at}来具体控制node的位置，可以通过\textbf{[below=of wating]}这样的语句来让新的node相对其他node而存在。
</p>


<p>
\subsection{node旁插入标签}
node旁边加上标签，使用\textbf{label}选项，语法是：<br >
\verb+label=above:$s&le;3$+。除了常用的above，below等控制位置外，还可以直接用60这样的数值控制位置，表示node圆圈逆时针旋转60度的那个位置。
</p>

<p>
所有标签的样式可以通过重定义\textbf{every label}样式来实现，
</p>


<p>
\subsection{node用箭头连接}
\verb+\draw [-&gt;] (critical.west) &#x2013; (enter critical.east);+
比如上面这个语句，critical是node的名字，\emph{.west}表示该node的shape的西边（也就是左边）出发。
</p>

<p>
\subsection{弯曲箭头}
用\textbf{to}语句更加灵活地画弯曲箭头，out选项控制出来的角度，in选项控制进去的角度。
\textbf{bend right}选项很有用，此外还有\textbf{bend left}选项，后面跟数值控制偏转量，一般45。
</p>

<p>
\subsection{箭头旁边加标签}
to语句后面跟个node就可以直接加上标签，表示在这个箭头path上加个node。这种方法有一个\textbf{swap}可以让标签交换位置。
</p>


<p>
\subsection{shape穿过某个点}
使用through包可以让node外的某个shape自定义穿过某个点，比如\textbf{circle through}=(3,3)
</p>

<p>
\subsection{node的scale选项}
\href{http://tex.stackexchange.com/questions/26846/how-to-scale-a-tikzpicture-including-texts}{参考网站}
</p>

<p>
scale是不改变node的大小的，可以用\textbf{every node/.style=\\ \{scale=0.6\}}等类似的语法来改变所有node的大小，或者scale用于单独的node命令改变某一个node。
</p>

<p>
此外还有\textbf{transform shape }选项可以放这个node随着外部的scale命令一起变动。
</p>


<p>
\section{fill命令}
fill命令就是填充某种颜色的形状，后面跟个\textbf{color}可选项设置填充的颜色，默认是黑色。比如画一个填充颜色的圆：<br >
\verb+\fill[cyan] (0,0) circle  (1) ;+
</p>

<p>
\newcommand{\testtext}{this is a test line}
</p>

\begin{tikzpicture}
\fill[cyan] (0,0) circle  (1) ;
\end{tikzpicture}

<p>
为了简单起见，draw命令可以加上fill可选项，然后和上面类似的有：
</p>

\begin{Verbatim}
\begin{tikzpicture}
\draw [color=blue,fill=red,ultra thick,] (0,0) circle (1);
\end{tikzpicture}
\end{Verbatim}


\begin{tikzpicture}
\draw [color=blue,fill=red,ultra thick,] (0,0) circle (1);
\end{tikzpicture}
<p>
注意到线条的颜色和填充颜色的控制。
</p>


<p>
\subsection{填充没有线条}
如果你不希望有线条，那么使用path命令可以做到这点。
</p>

\begin{Verbatim}
\begin{tikzpicture}
\path[fill=cyan] (0,0) circle  (1) ;
\end{tikzpicture}
\end{Verbatim}

\begin{tikzpicture}
\path[fill=cyan] (0,0) circle  (1) ;
\end{tikzpicture}

<p>
\subsection{filldraw命令}
是draw命令和fill命令的结合。\textbf{fill=}可选项调整填充的颜色，\textbf{draw=}可选项调整画的线条的颜色。
</p>



<p>
\section{shade命令}
shade命令和fill命令的区别就是填充的颜色是渐变的，其他类似。
</p>

<p>
其可选项有\textbf{top color和bottom color}表示上下渐变的颜色，\textbf{left color和right color}，\textbf{innercolor和outercolor}，这些是配对的。此外还有\textbf{ball color}让颜色渐变像一个有光照的球。
</p>

<p>
\subsection{小红球}
</p>
\begin{tikzpicture}
\shade[ball color=red] (1,2) circle (1);
\end{tikzpicture}


<p>
\section{tikz中的随机数}
\textbf{rand}产生一个随机数，范围在-1～1之间。
</p>





<p>
\chapter{tikz进阶}
tikz除了前面的基本必要知识外，还有很多零零散散的内容，有的如果你需要的话就会很重要，如果不需要的话则不重要。接下来的部分将通过一个一个例子来学习，读者不需要全部都看，如果你想画图，然后看到感兴趣的例子了，你就可以看看这个代码。因为时间紧张，代码不会一一详细讲解了，读者如果遇到疑问，可以查阅手册。
</p>


<p>
\section{画正多边形}
</p>
\begin{Verbatim}

\begin{tikzpicture}
\draw (0,0) circle (4) ;
\coordinate (O) at (0,0);
\shade[ball color=red](O) circle (0.1) node[below] {O};
\def\n{5}
\pgfmathsetmacro\i{\n-1}
\foreach \x in {0,...,\i}
{
\def\pointname{\x}
\coordinate (\pointname) at ($(0,0) +(\x*360/\n:4cm)$)  ;
\shade[ball color=red](\pointname) circle (0.05) node[below] {\small \x};
}

\draw (0)
\foreach \x in {0,...,\i}
{ -- (\x) } -- cycle;

\end{tikzpicture}
\end{Verbatim}

\begin{tikzpicture}
\draw (0,0) circle (4) ;
\coordinate (O) at (0,0);
\shade[ball color=red](O) circle (0.1) node[below] {O};
\def\n{5}
\pgfmathsetmacro\i{\n-1}
\foreach \x in {0,...,\i}
{
\def\pointname{\x}
\coordinate (\pointname) at ($(0,0) +(\x*360/\n:4cm)$)  ;
\shade[ball color=red](\pointname) circle (0.05) node[below] {\small \x};
}

\draw (0)
\foreach \x in {0,...,\i}
{ -- (\x) } -- cycle;

\end{tikzpicture}

<p>
这个例子核心内容是批量定义点和点的运算，把这个弄懂了，后面tikz的核心大门就为你打开了，然后很多图形都可以用简洁的命令生成出来了。
</p>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline37">多个node连接</h2>
<div class="outline-text-2" id="text-19">
<div class="highlight"><pre><span></span><span class="k">\usetikzlibrary</span><span class="nb">{</span>positioning<span class="nb">}</span>
<span class="k">\tikzset</span><span class="nb">{</span>place/.style=<span class="nb">{</span>circle,draw=blue!50,fill=blue!20,
thick,inner sep=0pt,minimum size=6mm<span class="nb">}}</span>
<span class="k">\tikzset</span><span class="nb">{</span>transition/.style=<span class="nb">{</span>rectangle,draw=black!50,
fill=black!20,thick,inner sep=0pt,minimum size=4mm<span class="nb">}}</span>
<span class="k">\tikzset</span><span class="nb">{</span>every label/.style=red<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>[bend angle=45]
<span class="k">\node</span><span class="na">[place]</span> (waiting)  <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[place]</span> (critical) [below=of waiting] <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[place]</span>(semaphore) [below=of critical,label=above:<span class="s">$</span><span class="nb">s</span><span class="nv">\le</span><span class="m">3</span><span class="s">$</span>] <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[transition]</span>(leave critical) [right=of critical]<span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[transition]</span> (enter critical)[left=of critical]<span class="nb">{}</span>;
<span class="k">\draw</span> [-&gt;] (enter critical) to (critical);
<span class="k">\draw</span> [-&gt;] (waiting) to [bend right] (enter critical);
<span class="k">\draw</span> [-&gt;] (enter critical) to [bend right] (semaphore);
<span class="k">\draw</span> [-&gt;] (semaphore) to [bend right] (leave critical);
<span class="k">\draw</span> [-&gt;] (critical) to (leave critical);
<span class="k">\draw</span> [-&gt;] (leave critical) to [bend right] (waiting);
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>


<p>
这个例子需要加载positioning包，这个例子很好地展示了多个node和用箭头连接来表示他们关系的图形如何绘制。
</p>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline38">绘制几何图形</h2>
<div class="outline-text-2" id="text-20">
<p>
为了减少文档大小，我编写的tikz的例子都放入文件夹[\textit{tikz制图}]里面了。
</p>

<div class="highlight"><pre><span></span><span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
<span class="k">\coordinate</span><span class="na">[label=left:\textcolor{blue}{$A$}]</span> (A) 
at (<span class="s">$</span><span class="o">(</span><span class="m">0</span><span class="nb">,</span><span class="m">0</span><span class="o">)</span><span class="nb"> </span><span class="o">+</span><span class="m">0</span><span class="nb">.</span><span class="m">1</span><span class="o">*(</span><span class="nb">rand,rand</span><span class="o">)</span><span class="s">$</span>) ;
<span class="k">\coordinate</span><span class="na">[label=right:\textcolor{blue}{$B$}]</span> (B) 
at (<span class="s">$</span><span class="o">(</span><span class="m">1</span><span class="nb">.</span><span class="m">25</span><span class="nb">,</span><span class="m">0</span><span class="nb">.</span><span class="m">25</span><span class="o">)</span><span class="nb"> </span><span class="o">+</span><span class="m">0</span><span class="nb">.</span><span class="m">1</span><span class="o">*(</span><span class="nb">rand,rand</span><span class="o">)</span><span class="s">$</span>) ;

<span class="k">\draw</span> [name path=A--B] (A) -- (B);

<span class="k">\node</span> [name path=D,draw,circle through=(B),label=left:<span class="s">$</span><span class="nb">D</span><span class="s">$</span>] at (A) <span class="nb">{}</span>;
<span class="k">\node</span> [name path=E,draw,circle through=(A),label=right:<span class="s">$</span><span class="nb">E</span><span class="s">$</span>] at (B) <span class="nb">{}</span>;

<span class="k">\path</span> [name intersections=<span class="nb">{</span>of=D and E, 
by=<span class="nb">{</span>[label=above:<span class="s">$</span><span class="nb">C</span><span class="s">$</span>]C, [label=below:<span class="s">$</span><span class="nb">C&#39;</span><span class="s">$</span>]C&#39;<span class="nb">}}</span>];

<span class="k">\draw</span> [red] (A) -- (C);
<span class="k">\draw</span> [red] (B) -- (C);

<span class="k">\draw</span> [name path=C--C&#39;,red] (C) -- (C&#39;);
<span class="k">\path</span> [name intersections=<span class="nb">{</span>of=A--B and C--C&#39;,by=F<span class="nb">}</span>];

<span class="k">\node</span> [fill=red,inner sep=1,label=-45:<span class="s">$</span><span class="nb">F</span><span class="s">$</span>] at (F) <span class="nb">{}</span>;

<span class="k">\foreach</span> <span class="k">\point</span> in <span class="nb">{</span>A,B,C,C&#39;<span class="nb">}</span>
<span class="k">\fill</span> [black,opacity=.5] (<span class="k">\point</span>) circle (2pt);

<span class="k">\begin</span><span class="nb">{</span>pgfonlayer<span class="nb">}{</span>background<span class="nb">}</span>
<span class="k">\fill</span><span class="na">[orange!80]</span> (A) -- (C) -- (B) -- cycle;
<span class="k">\end</span><span class="nb">{</span>pgfonlayer<span class="nb">}</span>

<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>



<p>
\chapter{tikz高级知识}
</p>



<p>
\section{文本中的图片}
wherever \begin{tikzpicture} \draw [yellow, line width=6]
(0,0) &#x2013; (.5,0); \end{tikzpicture} you want
</p>

<p>
\section{clip命令}
clip就是剪切的意思，就是通过clip命令按照某个形状来剪切，外面的图形都不保留，可以跟一个可选项\textbf{draw}，这样剪切的时候同时画出了这个形状。
</p>


<p>
\section{path路径闭合}
任何构建的path最后都可以通过\textbf{ -{}- cycle}将其闭合起来。
</p>


<p>
\section{插入其他图片}
在node里面用includegraphics命令可以插入图片。\href{http://tex.stackexchange.com/questions/115087/how-do-i-embed-an-external-image-within-tikzpicture}{参考网站}
</p>

<p>
\section{baseline选项}
这个主要控制inline模式下图片的位置，默认\textbf{baseline=0pt}。
</p>


<p>
\section{tikzmark}
</p>

<p>
\chapter{pgfplots宏包介绍}
老实说pgfplots宏包真的编写的很好，有时甚至画一个基本的坐标轴都懒得动用其他宏包命令了，直接调用一个axis环境和进行一些简单的优化即可。当然就作为坐标轴作图可能总是用pgfplots宏包可能会稍显单调，但如果要求不是特别高的确实用pgfplots宏包会基于坐标轴的各个图形非常的称心如意。
</p>

<p>
这个宏包内容还是挺多的，先就最基本的内容整理一下。
</p>

<p>
\section{简单了解}
\subsection{直接画函数}
</p>
\begin{Verbatim}
\begin{tikzpicture}
\begin{axis}
\addplot {x^2};

\end{axis}
\end{tikzpicture}
\end{Verbatim}


\begin{tikzpicture}
\begin{axis}
\addplot {x^2};

\end{axis}
\end{tikzpicture}


<p>
\subsection{根据数据点来}
</p>
\begin{Verbatim}
\begin{tikzpicture}
\begin{axis}
\addplot coordinates 
{(0,0)
(1,1)
(2,3)
(3,9)};

\end{axis}
\end{tikzpicture}
\end{Verbatim}

\begin{tikzpicture}
\begin{axis}
\addplot coordinates 
{(0,0)
(1,1)
(2,3)
(3,9)};

\end{axis}
\end{tikzpicture}

<p>
\subsection{画三维数据图}
</p>
\begin{Verbatim}
\begin{tikzpicture}
\begin{axis}
\addplot3[surf] {x^2+y^2};

\end{axis}
\end{tikzpicture}
\end{Verbatim}


\begin{tikzpicture}
\begin{axis}
\addplot3[surf] {x^2+y^2};

\end{axis}
\end{tikzpicture}


<p>
\section{纯坐标轴优化}
首先我们来看一个简单的例子，然后就这些选项做出说明。
</p>

\begin{Verbatim}
\begin{tikzpicture}
\begin{axis}[grid=major,
xtick={0,0.1,0.2,0.3,0.4},
ytick={0,10,20,30,40},
%extra x ticks={1.5},
axis x line=bottom,
axis y line =left,
%legend pos=outer north east,
xmin=0,xmax=0.4,ymin=0,ymax=45,
minor tick num=1,
tick align=inside,
xlabel=$t$/s,
ylabel=$s$/cm,
grid=both]

\end{axis}
\end{tikzpicture}
\end{Verbatim}



\begin{tikzpicture}
\begin{axis}[grid=major,
xtick={0,0.1,0.2,0.3,0.4},
ytick={0,10,20,30,40},
%extra x ticks={1.5},
axis x line=bottom,
axis y line =left,
%legend pos=outer north east,
xmin=0,xmax=0.4,ymin=0,ymax=45,
minor tick num=1,
tick align=inside,
xlabel=$t$/s,
ylabel=$s$/cm,
grid=both]

\end{axis}
\end{tikzpicture}




<p>
\section{x坐标轴标记指定}
\href{http://tex.stackexchange.com/questions/47345/specify-the-step-of-pgfplots-axis}{参考网站}
</p>

<p>
默认的看好不好用，\textbf{xtick=data}选项会让所有输入的数据点都有标记。
</p>

<p>
\textbf{xtick=\{1,2,3,5\}}：指定的某些x轴显示。
</p>

<p>
\subsection{额外的坐标轴标记}
用\textbf{extra x ticks=\{1.25\}}来显示额外的坐标轴标记。
</p>

<p>
\section{坐标轴范围}
xmin，xmax，ymin，ymax选项使用来配置坐标轴范围的。
</p>


<p>
\section{画多个线条}
用\textbf{addlegendentry}命令来为某个图例加上名字。
</p>

<p>
\section{网格}
加上选项\textbf{grid=major}即加上网格。
</p>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline44">电路图</h2>
<div class="outline-text-2" id="text-21">
<p>
用tikz绘制一般电路图的解决方案可以说是完美，首先需要加载宏包：
</p>
<pre>
\usetikzlibrary{circuits.ee.IEC}
</pre>


<p>
然后电路基本的组成单元是以node的某个特定样式的形式引入的，比如电池：
</p>
<pre>
\node[battery] (battery) at(0,3) {};
</pre>


<p>
下面列出常用的符号列表
</p>
</div>
<div class="outline-3">
<h3 id="orgheadline39">电路基本符号</h3>
<div class="outline-text-3" id="text-21-1">
<dl class="org-dl">
<dt>battery </dt><dd>电池  <code>\tikz[circuit ee IEC]{\node[battery] {};}</code></dd>
<dt>bulb </dt><dd>灯泡   <code>\tikz[circuit ee IEC]{\node[bulb] {};}</code></dd>
<dt>make contact </dt><dd>开关  <code>\tikz[circuit ee IEC]{\node[make contact] {};}</code></dd>
<dt>make contact </dt><dd>开关另一种形式 额外选项[set make contact graphic= var make contact  IEC graphic]}  <code>\tikz[circuit ee IEC,set make contact graphic= var make contact IEC graphic]{\node[make contact] {};}</code></dd>
<dt>(no term)</dt><dd>resistor  &amp; 电阻\footnote{加上选项[ohm=20k]则上面写上电阻数值}  &amp; \tikz[circuit ee IEC]{\node[resistor] {};}<br ></dd>
</dl>
<p>
contact  &amp; 电线交点  &amp; \tikz[circuit ee IEC]{\node[contact] {};}<br >
current direction  &amp; to路径上加上电流方向\footnote{如果是[\textbf{current direction'}]则方向反向。}  &amp; \tikz[circuit ee IEC]{\draw (0,0) to[current direction] (1,0);}<br >
</p>
</div>
</div>

<div class="outline-3">
<h3 id="orgheadline40">连线问题</h3>
<div class="outline-text-3" id="text-21-2">
<p>
各个元器件之间的连线除了一般的\verb+&#x2013;+连直线外，还可以通过\verb+-|+或者\verb+|-+来处理垂直拐线的问题，其中\verb+-|+你可以理解为从第一个点先横着走再竖着走，而\verb+|-+你可以理解为先从第一个点竖着走再横着走。
</p>
</div>
</div>

<div class="outline-3">
<h3 id="orgheadline41">翻转问题</h3>
<div class="outline-text-3" id="text-21-3">
<p>
四个基本的选项[\textbf{point up point down point left point right}\\]，分别是朝上，朝下，朝左和朝 右。
</p>

<p>
其他复杂的角度的处理方法不是用rotate选项，而是在路径上加上上面的电路符号选项，这样那些元器件会自动跟随路径对齐的。
</p>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline42">电压表和电流表</h3>
<div class="outline-text-3" id="text-21-4">
<p>
电压表电流表实际上\textbf{circuit ee IEC}里面也有，不过不是我们（中国大陆）初高中物理书上常见的那种，而我们其实可以很简单的用node命令就画出了类似书本上的那种符号：
</p>
<div class="highlight"><pre><span></span><span class="k">\node</span><span class="na">[draw,circle,inner sep =1pt]</span> (A) at (-2,1.5) <span class="nb">{</span><span class="k">\footnotesize</span> A<span class="nb">}</span>;
<span class="k">\node</span><span class="na">[draw,circle,inner sep =1pt]</span> (V) at (1,4) <span class="nb">{</span><span class="k">\footnotesize</span> V<span class="nb">}</span>;
</pre></div>
</div>
</div>


<div class="outline-3">
<h3 id="orgheadline43">info选项</h3>
<div class="outline-text-3" id="text-21-5">
<p>
这些node命令都支持\verb+info+选项，也就是旁边加上标签信息。此外还有一个\verb+info'+选项会让信息位置反向，有时很有用。如果位置还是不满意那就只好用\verb+info=angle:text+的形式了，其中angle填上你想要的角度。一般通过角度控制能够达到满意的效果了吧。
</p>

<p>
此外还有一个\textbf{info sloped}选项，这样文字会跟随路径出现旋转效果。
</p>
</div>
</div>
</div>


<div class="outline-2">
<h2 id="orgheadline47">示例</h2>
<div class="outline-text-2" id="text-22">
</div><div class="outline-3">
<h3 id="orgheadline45">例子一</h3>
<div class="outline-text-3" id="text-22-1">
<div class="highlight"><pre><span></span><span class="k">\usetikzlibrary</span><span class="nb">{</span>circuits.ee.IEC<span class="nb">}</span>

<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>[circuit ee IEC]
<span class="k">\node</span><span class="na">[battery]</span> (battery) at(0,3) <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[make contact,info=S]</span> (contact1) at(2,3) <span class="nb">{}</span>;
<span class="k">\draw</span> (battery) -- (contact1);
<span class="k">\node</span><span class="na">[draw,circle,inner sep =1pt]</span> (A) at (3,1.5) <span class="nb">{</span><span class="k">\footnotesize</span> A<span class="nb">}</span>;
<span class="k">\draw</span> (contact1) -| (A);
<span class="k">\node</span><span class="na">[bulb,info=L1]</span> (L1) at (-1,0)<span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[bulb,info=L2]</span> (L2) at (1.5,0)<span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[contact,info=c]</span> (c) at (2.5,0) <span class="nb">{}</span>;
<span class="k">\draw</span> (L2) -| (A);
<span class="k">\draw</span> (L1) -- (L2);
<span class="k">\node</span><span class="na">[contact,info&#39;=b]</span> (b) <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[contact,info=180:a]</span> (a) at(-2,1.5) <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[draw,circle,inner sep =1pt]</span> (V) at (-1,1.5) <span class="nb">{</span><span class="k">\footnotesize</span> V<span class="nb">}</span>;
<span class="k">\draw</span> (a) -- (V);
<span class="k">\draw</span> (V) -| (b);
<span class="k">\draw</span> (L1) -| (a);
<span class="k">\draw</span> (a) |- (battery);
<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>
</div>
</div>




<div class="outline-3">
<h3 id="orgheadline46">例子二</h3>
<div class="outline-text-3" id="text-22-2">
<div class="highlight"><pre><span></span><span class="k">\usetikzlibrary</span><span class="nb">{</span>circuits.ee.IEC<span class="nb">}</span>

<span class="k">\begin</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>[circuit ee IEC]
<span class="k">\node</span><span class="na">[battery]</span> (battery) at(0,0) <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[make contact,info=S]</span> (S) at(-2,0) <span class="nb">{}</span>;
<span class="k">\draw</span> (battery) -- (S);
<span class="k">\node</span><span class="na">[draw,circle,inner sep =1pt]</span> (A) at (-2,1.5) <span class="nb">{</span><span class="k">\footnotesize</span> A<span class="nb">}</span>;
<span class="k">\node</span><span class="na">[bulb,info=L1]</span> (L1) at (0,1.5)<span class="nb">{}</span>;
<span class="k">\draw</span> (A) -- (L1);
<span class="k">\node</span><span class="na">[resistor]</span> (R) at (0,3) <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[bulb,info=L2]</span> (L2) at (-2,3)<span class="nb">{}</span>;
<span class="k">\draw</span> (L2) -- (R);
<span class="k">\node</span><span class="na">[contact]</span> (a) at(-4,1.5) <span class="nb">{}</span>;
<span class="k">\node</span><span class="na">[contact]</span> (b) at(2,1.5) <span class="nb">{}</span>;
<span class="k">\draw</span> (S) -| (a);
<span class="k">\draw</span> (battery) -| (b);
<span class="k">\draw</span> (a) |- (L2);
<span class="k">\draw</span> (a) -- (A);
<span class="k">\node</span><span class="na">[draw,circle,inner sep =1pt]</span> (V) at (1,4) <span class="nb">{</span><span class="k">\footnotesize</span> V<span class="nb">}</span>;
<span class="k">\draw</span><span class="na">[-latex]</span> (V) -| (R.north);
<span class="k">\draw</span> (L1) -- (b);
<span class="k">\draw</span> (b) |- (R);
<span class="k">\draw</span> (b) |- (V) ;

<span class="k">\end</span><span class="nb">{</span>tikzpicture<span class="nb">}</span>
</pre></div>
</div>
</div>
</div>





<div class="outline-2">
<h2 id="orgheadline50">附录</h2>
<div class="outline-text-2" id="text-23">
</div><div class="outline-3">
<h3 id="orgheadline48">单位</h3>
<div class="outline-text-3" id="text-23-1">
<p>
tikz的单位继承自tex的单位系统，然后其默认的长度单位是cm。
</p>
</div>
</div>
<div class="outline-3">
<h3 id="orgheadline49">参考资料</h3>
<div class="outline-text-3" id="text-23-2">
<ol class="org-ol">
<li>Graphics with TikZ Andrew Mertz and William Slough</li>

<li>A very minimal introduction to TikZ Jacques Crémer</li>

<li>the tikz 官方文档，这个用texdoc命令调不出官方文档，用google搜索“tikz pdf”吧</li>
</ol>
</div>
</div>
</div>
</div>
</body>
</html>
