#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:[11pt,oneside]
#+LATEX_HEADER: \usepackage{article}


#+TITLE: pytest模块
#+AUTHOR: 万泽(德山书生)
#+CREATOR: wanze(<a href="mailto:a358003542@gmail.com">a358003542@gmail.com</a>)
#+DESCRIPTION: 制作者邮箱：a358003542@gmail.com

* 简介
pytest是一个流行的python测试开发框架，很多python模块都将其作为标配。

安装就用pip install pytest 即可，然后看下安装情况：
#+BEGIN_EXAMPLE
pytest --version
#+END_EXAMPLE

pytest可以很好的和setuptools模块集成起来，具体设置方法请参看我写的这个python小项目 [[https://github.com/a358003542/pyskeleton][pyskeleton]] 。

其重要利用了 pytest-runner 这个模块来实现了：
#+BEGIN_EXAMPLE
python setup.py test
#+END_EXAMPLE

这个的输入。

当然你可以安装pytest之后直接下模块文件夹下运行：
#+BEGIN_EXAMPLE
pytest
#+END_EXAMPLE

那么用上面的那种输入风格有什么好处呢，好处就是你直接修改模块和测试就行了，不仅不用安装该模块到系统里面，甚至连build操作都可以不用做:
#+BEGIN_EXAMPLE
python setup.py build
#+END_EXAMPLE

这确实很方便，那么pytest的一些参数怎么传递进去了，如下所示是利用 ~--addopts~ 这个选项传递进去的:
#+BEGIN_EXAMPLE
python setup.py test --addopts '-v tests/test_pytest.py'
#+END_EXAMPLE


* 第一个例子
在tests文件夹下新建一个文件test_pytest.py，然后写入内容如下：

#+BEGIN_EXAMPLE
def addone(x):
    return x + 1

def test_answer():
    assert addone(3) == 4
#+END_EXAMPLE

然后你可以运行pytest来测试看看。



* 捕捉异常
如何捕捉期待的异常呢？如下所示：
#+BEGIN_SRC python
from pytest import raises

class MyException(Exception):
    pass

def test_my_exception():
    with raises(MyException):
        raise MyException
#+END_SRC




