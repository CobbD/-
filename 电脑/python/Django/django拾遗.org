#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:[11pt,oneside]
#+LATEX_HEADER: \usepackage{article}


#+TITLE: django拾遗
#+AUTHOR: 万泽(德山书生)
#+CREATOR: wanze(<a href="mailto:a358003542@gmail.com">a358003542@gmail.com</a>)
#+DESCRIPTION: 制作者邮箱：a358003542@gmail.com


* 如何根据django的模型对象来获取其对应的表格的名字
参看 [[http://stackoverflow.com/questions/233045/how-to-read-the-database-table-name-of-a-model-instance][这个网页]] 。

答: 
#+BEGIN_EXAMPLE
model_instance._meta.db_table
#+END_EXAMPLE


* 如何使用好django的ImageField
参考了 [[http://gregblogs.com/django-saving-an-image-using-imagefield-explain-a-little/][这篇文章]] 。

ImageField和FileField很类似，除了还多了 ~width~ 和 ~height~ 属性，然后就是在上传的时候确保文件是图片文件。

具体在模型文件中的定义如下:
#+BEGIN_EXAMPLE
banner = models.ImageField(upload_to=game_2048_images, blank=True,
                           storage=OverwriteStorage(), default="placeholder.jpg")
#+END_EXAMPLE
上面的 ~upload_to~ 是控制图片在计算机中的保存路径，可以直接指定一个文件夹路径，但这通常不够灵活，这里通过一个函数来实现更加灵活的路径指定:
#+BEGIN_EXAMPLE
def game_2048_images(instance, filename):
    """
    where image upload to.
    """
    return 'game/2048/images/{}/{}'.format(instance.user.username, filename)
#+END_EXAMPLE

这里具体路径是根据你在 ~settings~ 里面指定的 ~MEDIA_ROOT~ 而来，然后再指定里面的具体的文件夹路径。我们看到函数还可以接受具体模型对应的实例，从而建立自动根据user用户名来分配不同的文件夹路径。

~storage=OverwriteStorage()~ 实现了如果文件名重复则覆盖的逻辑:
#+BEGIN_EXAMPLE
class OverwriteStorage(FileSystemStorage):
    '''
    存储文件或图片，如果文件名重复则覆盖。
    '''

    def get_available_name(self, name):
        if self.exists(name):
            os.remove(os.path.join(settings.MEDIA_ROOT, name))
        return name
#+END_EXAMPLE


ImageField 可以和rest_framework的序列化类形成很好的联动，最后序列化之后返回的是文件路径url字符串，测试的时候我们可以如下用django来挂载这些静态资源文件，实际运营的时候则推荐用nginx怎么设置一下url分发。
#+BEGIN_EXAMPLE
from django.conf.urls.static import static
from django.conf import settings

if settings.DEBUG:
    urlpatterns += static('/data/', document_root=settings.MEDIA_ROOT)
#+END_EXAMPLE

在保存传过来的图片文件的时候，常规构建form对象也是可行的:
#+BEGIN_EXAMPLE
        form = Game2048InfoForm(
            request.POST, request.FILES, instance=target_info)

        if form.is_valid():
            new_game_info = form.save()
        else:
            logger.warning('form invalid')
#+END_EXAMPLE

否则你需要通过:
#+BEGIN_EXAMPLE
request.FILES['imgfield']
#+END_EXAMPLE

这样的语法来获取图片内容。
