#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:[11pt,oneside]
#+LATEX_HEADER: \usepackage{article}


#+TITLE: 前端修炼日记
#+AUTHOR: 万泽(德山书生)
#+CREATOR: wanze(<a href="mailto:a358003542@gmail.com">a358003542@gmail.com</a>)
#+DESCRIPTION: 制作者邮箱：a358003542@gmail.com


* 响应式布局
请读者先阅读 [[http://www.ruanyifeng.com/blog/2012/05/responsive_web_design.html][这篇文章]] 。这篇刚开始 Ethan Marccote 给出的那个例子有个非常重要的信息，那就是设备的像素分级:

- 大于1300像素
- 600到1300像素
- 400到600像素
- 小于400像素

这个像素分级可以为后面我们要根据不同的设备进行css进行设置提供了参考。

然后一般网页都要加上这一行:
#+BEGIN_EXAMPLE
<meta name="viewport" content="width=device-width, initial-scale=1" />
#+END_EXAMPLE
意思是网页默认宽度为设备宽度，原始缩放比为1。

然后就是各个元素宽度最好不要有 ~width: xxx px~ 这样写死了的css设置，而是 ~%~ 或者 ~auto~ 。字体的大小也都推荐使用 ~em~ 这样的相对大小。

h1 默认大小是 1.5em 。
#+BEGIN_EXAMPLE
h1 {
    font-size: 1.5em; 
}
#+END_EXAMPLE

small 默认是 0.875em 。
#+BEGIN_EXAMPLE
small {
    font-size: 0.875em;
}
#+END_EXAMPLE

流动式布局，各个区块的位置都是浮动的，有些情况下会需要使用 ~position: absolute~ ，这会带来很多麻烦，尽量少用。

根据屏幕响应式多个css配置适应: 【因为css有很多通用配置是多设备皆适用的，下面这些根据屏幕响应的css应该放在css文件的最后面。】

参看 [[http://learn.shayhowe.com/advanced-html-css/responsive-web-design/][这篇文章]] ，其提到了现在流行的 mobile-first 设计思路，也就是有限照顾手机小屏幕设备的设计流程。先写好通用css配置，然后css文件最后面如下设置这些屏幕响应css设置。从最小的屏幕照顾起:  
#+BEGIN_SRC css
@media screen and (min-width: 400px) {
    这里放着屏幕小于400px时的配置
}

@media screen and (min-width:600px){
    这里放着屏幕大于400px小于600px的配置
}
@media screen and (min-width:1000px){
    这里放着屏幕大于600px小于1000px的配置 
}

@media screen and (min-width:1400px){
    这里放着屏幕大于1400px时的css配置
}


#+END_SRC

图片的自适应，如下设置最大宽度。
#+BEGIN_EXAMPLE
img { max-width: 100%;}
#+END_EXAMPLE
